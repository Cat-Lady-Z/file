<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.util.file.mapper.BeeleStoreGoodsMapper">
  <resultMap id="BaseResultMap" type="com.util.file.entity.BeeleStoreGoods">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="sku_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="upc" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.Short" jdbcType="SMALLINT" />
      <arg column="upc_type" javaType="java.lang.Short" jdbcType="SMALLINT" />
      <arg column="goods_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, sku_id, upc, `name`, store_id, status, upc_type, goods_id
  </sql>

  <insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="false">
    insert into beele_store_goods
    ( id, sku_id, upc,
    `name`, store_id, status,
    upc_type, goods_id)
    values
    <foreach collection="batchList" item="item" index="index" separator=",">
      (
      #{item.id},
      #{item.skuId},
      #{item.upc},
      #{item.name},
      #{item.storeId},
      #{item.status},
      #{item.upcType},
      #{item.goodsId}
      )
    </foreach>
  </insert>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from beele_store_goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from beele_store_goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.util.file.entity.BeeleStoreGoods">
    insert into beele_store_goods (id, sku_id, upc, 
      name, store_id, status, 
      upc_type, goods_id)
    values (#{id,jdbcType=INTEGER}, #{skuId,jdbcType=BIGINT}, #{upc,jdbcType=BIGINT}, 
      #{name,jdbcType=VARCHAR}, #{storeId}, #{status,jdbcType=SMALLINT},
      #{upcType,jdbcType=SMALLINT}, #{goodsId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.util.file.entity.BeeleStoreGoods">
    insert into beele_store_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="skuId != null">
        sku_id,
      </if>
      <if test="upc != null">
        upc,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="upcType != null">
        upc_type,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="skuId != null">
        #{skuId,jdbcType=BIGINT},
      </if>
      <if test="upc != null">
        #{upc,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="upcType != null">
        #{upcType,jdbcType=SMALLINT},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.util.file.entity.BeeleStoreGoods">
    update beele_store_goods
    <set>
      <if test="skuId != null">
        sku_id = #{skuId,jdbcType=BIGINT},
      </if>
      <if test="upc != null">
        upc = #{upc,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="upcType != null">
        upc_type = #{upcType,jdbcType=SMALLINT},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.util.file.entity.BeeleStoreGoods">
    update beele_store_goods
    set sku_id = #{skuId,jdbcType=BIGINT},
      upc = #{upc,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=INTEGER},
      status = #{status,jdbcType=SMALLINT},
      upc_type = #{upcType,jdbcType=SMALLINT},
      goods_id = #{goodsId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>